<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="11" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="17325" started-at="2019-05-23T09:55:59Z" finished-at="2019-05-23T09:56:16Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="17325" started-at="2019-05-23T09:55:59Z" finished-at="2019-05-23T09:56:16Z">
      <class name="com.qa.extentreport.TestClass.TestOfExtentReport">
        <test-method status="PASS" signature="InitialisingExtentReports()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="InitialisingExtentReports" is-config="true" duration-ms="136" started-at="2019-05-23T15:25:59Z" finished-at="2019-05-23T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitialisingExtentReports -->
        <test-method status="PASS" signature="OpeningBrowser()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="OpeningBrowser" is-config="true" duration-ms="9523" started-at="2019-05-23T15:25:59Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpeningBrowser -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="3" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.TrackTransferModule()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="TrackTransferModule()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="TrackTransferModule" duration-ms="8" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TrackTransferModule -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TrackTransferModule status=SUCCESS method=TestOfExtentReport.TrackTransferModule()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.EnterWrongMTCNNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="EnterWrongMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="EnterWrongMTCNNumber" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterWrongMTCNNumber -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.ErrorMessageInString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterWrongMTCNNumber status=SUCCESS method=TestOfExtentReport.EnterWrongMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="ErrorMessageInString()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="ErrorMessageInString" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ErrorMessageInString -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ErrorMessageInString status=SUCCESS method=TestOfExtentReport.ErrorMessageInString()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.ErrorMessageInNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="ErrorMessageInNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="ErrorMessageInNumber" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ErrorMessageInNumber -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ErrorMessageInNumber status=SUCCESS method=TestOfExtentReport.ErrorMessageInNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="EnterCorrectMTCNnumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="EnterCorrectMTCNnumber" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterCorrectMTCNnumber -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.EnterCorrectMTCNnumber() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterCorrectMTCNnumber status=SUCCESS method=TestOfExtentReport.EnterCorrectMTCNnumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.StatusOfValidMTCNnumber() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="StatusOfValidMTCNnumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="StatusOfValidMTCNnumber" duration-ms="3001" started-at="2019-05-23T15:26:09Z" finished-at="2019-05-23T15:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusOfValidMTCNnumber -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StatusOfValidMTCNnumber status=SUCCESS method=TestOfExtentReport.StatusOfValidMTCNnumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.TrackNewTransfer() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="TrackNewTransfer()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="TrackNewTransfer" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TrackNewTransfer -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TrackNewTransfer status=SUCCESS method=TestOfExtentReport.TrackNewTransfer()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="DontHaveMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="DontHaveMTCNNumber" duration-ms="3" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DontHaveMTCNNumber -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.DontHaveMTCNNumber() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="2" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DontHaveMTCNNumber status=SUCCESS method=TestOfExtentReport.DontHaveMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.SearchMTCNWithoutMTCNNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="SKIP" signature="SearchMTCNWithoutMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="SearchMTCNWithoutMTCNNumber" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test as this is not yet ready for testing..]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test as this is not yet ready for testing..
	at com.qa.extentreport.TestClass.TestOfExtentReport.SearchMTCNWithoutMTCNNumber(TestOfExtentReport.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMTCNWithoutMTCNNumber -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="5" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchMTCNWithoutMTCNNumber status=SKIP method=TestOfExtentReport.SearchMTCNWithoutMTCNNumber()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="FAIL" signature="FailingThisMethod()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="FailingThisMethod" duration-ms="4" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.qa.extentreport.TestClass.TestOfExtentReport.FailingThisMethod(TestOfExtentReport.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailingThisMethod -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.FailingThisMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="412" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FailingThisMethod status=FAILURE method=TestOfExtentReport.FailingThisMethod()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="SenderPhoneNumberModule()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="SenderPhoneNumberModule" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SenderPhoneNumberModule -->
        <test-method status="PASS" signature="CreateTest(java.lang.reflect.Method)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="CreateTest" is-config="true" duration-ms="0" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.extentreport.TestClass.TestOfExtentReport.SenderPhoneNumberModule() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTest -->
        <test-method status="PASS" signature="GetResult(org.testng.ITestResult)[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GetResult" is-config="true" duration-ms="1" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SenderPhoneNumberModule status=SUCCESS method=TestOfExtentReport.SenderPhoneNumberModule()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetResult -->
        <test-method status="PASS" signature="ClosingBrowser()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="ClosingBrowser" is-config="true" duration-ms="4323" started-at="2019-05-23T15:26:12Z" finished-at="2019-05-23T15:26:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClosingBrowser -->
        <test-method status="PASS" signature="GeneratingReport()[pri:0, instance:com.qa.extentreport.TestClass.TestOfExtentReport@475530b9]" name="GeneratingReport" is-config="true" duration-ms="251" started-at="2019-05-23T15:26:17Z" finished-at="2019-05-23T15:26:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GeneratingReport -->
      </class> <!-- com.qa.extentreport.TestClass.TestOfExtentReport -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
